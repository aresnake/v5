import traceback
from ares.core.intent_parser import parse_intent
from ares.bots.session_log_enricher_bot import enrich_log
from ares.bots.injector_bot import inject_intents_into_pending
from ares.tools.intent_executor import execute_intent
from ares.core.logger import get_logger

log = get_logger("RunPipeline")


def main(phrase: str = None, mode: str = "voice") -> bool:
    """
    Lance la pipeline principale :
    1. Parse la phrase
    2. Enrichit le log
    3. Injecte l'intent si nouveau
    4. Exécute l'intent
    """
    log.info("🧠 Lancement de la pipeline Blade...")

    if not phrase:
        log.warning("⛔ Aucune phrase reçue.")
        return False

    log.info(f"🎤 Phrase reçue : {phrase}")

    intent = parse_intent(phrase)
    if not intent:
        log.warning("❌ Aucun intent détecté.")
        return False

    log.info(f"✅ Intent détecté : {intent.get('name')}")

    try:
        # Étape 1 : enrichissement du log
        enrich_log(intent, mode=mode)
        log.info("🧬 Log enrichi avec succès.")

        # Étape 2 : injection si nouveau
        inject_intents_into_pending([intent])
        log.info("📥 Intent injecté si nouveau dans voice_config.yaml.")

        # Étape 3 : exécution
        success = execute_intent(intent)
        if not success:
            log.error("❌ Échec lors de l'exécution de l'intent.")
            return False

        return True

    except Exception as e:
        log.error(f"💥 Erreur dans run_pipeline : {e}")
        traceback.print_exc()
        return False


